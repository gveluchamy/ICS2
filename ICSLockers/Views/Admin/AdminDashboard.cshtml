@using ICSLockers.Models
@model AdminDashboard

@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<input type="hidden" id="total-used-lockers" value="@Model.LockerUsed" />
<input type="hidden" id="total-free-lockers" value="@Model.AvailableLockers" />
<div class="container-fluid main dashboard p-0">
    <div class="admin title-bar d-flex">
        <div class="col-lg-6 p-0 d-flex align-items-center">
            <nav aria-label="breadcrumb bg-white">
                <ol class="breadcrumb bg-white m-0">
                    <li class="breadcrumb-item">
                        <a href="/Admin/Dashboard">
                            <h5>Dashboard</h5>
                        </a>
                    </li>
                </ol>
            </nav>
        </div>
    </div>
    <div class="content-wrapper">
        <div class="passcode d-flex align-items-center text-center">
            <div class="col-lg-12 p-0">
                <div class="grid">
                    <div class="locker-unit d-flex">
                        <div class="col-lg-8 p-0">
                            <h5 class="text-left">Total Locations</h5>
                            <h1 class="text-left">@Model.TotalLocation</h1>
                        </div>
                        <div class="col-lg-4 p-0">
                            <img src="~/images/png/locker(1).png" alt="" class="dashboard-icon">
                        </div>
                    </div>
                    <div class="locker-unit d-flex">
                        <div class="col-lg-8 p-0">
                            <h5 class="text-left">Total Divisions</h5>
                            <h1 class="text-left">@Model.TotalDivisions</h1>
                        </div>
                        <div class="col-lg-4 p-0">
                            <img src="~/images/png/secure.png" alt="" class="dashboard-icon">
                        </div>
                    </div>
                     <div class="locker-unit d-flex">
                        <div class="col-lg-8 p-0">
                            <h5 class="text-left">Total Lockers</h5>
                            <h1 class="text-left total-lockers">@Model.TotalLockers</h1>
                        </div>
                        <div class="col-lg-4 p-0">
                            <img src="~/images/png/secure.png" alt="" class="dashboard-icon">
                        </div>
                    </div>                    
                    <div class="locker-unit d-flex">
                        <div class="col-lg-8 p-0">
                            <h5 class="text-left">Total Admin</h5>
                            <h1 class="text-left">@Model.UserList?.Count()</h1>
                        </div>
                        <div class="col-lg-4 p-0">
                            <img src="~/images/png/employee.png" alt="" class="dashboard-icon">
                        </div>
                    </div>
                    <div class="locker-unit d-flex">
                        <div class="col-lg-8 p-0">
                            <h5 class="text-left">Total Staffs</h5>
                            <h1 class="text-left">@Model.UserList?.Count()</h1>
                        </div>
                        <div class="col-lg-4 p-0">
                            <img src="~/images/png/employee.png" alt="" class="dashboard-icon">
                        </div>
                    </div>
                    <div class="locker-unit d-flex">
                        <div class="col-lg-8 p-0">
                            <h5 class="text-left">Total Users</h5>
                            <h1 class="text-left">@Model.UserList?.Count()</h1>
                        </div>
                        <div class="col-lg-4 p-0">
                            <img src="~/images/png/avatar.png" alt="" class="dashboard-icon">
                        </div>
                    </div>
                </div>
                <div class="d-flex">
                    <div class="donut-chart">
                        <div class="chart-title">
                            <h5>Locker usage</h5>
                        </div>
                        <div class="chart" style="height: 300px">
                            <canvas id="myChart" style="width:100%;max-width:600px;"></canvas>
                        </div>
                    </div>               
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.1/Chart.min.js"></script>

<script>
    var usedLockers = parseInt($("#total-used-lockers").val());
    var freeLockers = parseInt($("#total-free-lockers").val());

    var canvas = document.getElementById("myChart");
    var ctx = canvas.getContext('2d');
    var xValues = [ "Available Lockers", "Used Lockers" ];
    var yValues = [ freeLockers, usedLockers ];
    var barColors = [
        "#b2cbea",
        "#014efb"
    ];

    // Global Options:
    Chart.defaults.global.defaultFontColor = 'black';
    Chart.defaults.global.defaultFontSize = 16;

    var data = {
        labels: xValues,
        datasets: [
            {
                fill: true,
                backgroundColor: barColors,
                data: yValues,
                borderColor: barColors,
                borderWidth: [ 2, 2 ]
            }
        ]
    };

    var options = {
        responsive: true,
        title: {
            display: true,
            position: "Top",
            text: "Locker Pie Chart",
            fontSize: 18,
            fontColor: "#111"
        },
        legend: {
            display: true,
            position: "bottom",
            labels: {
                fontColor: "#333",
                fontSize: 16
            }
        },
        rotation: -0.7 * Math.PI
    }


    // Chart declaration:
    var myBarChart = new Chart(ctx, {
        type: 'pie',
        data: data,
        options: options
    });

    $('.locker-unit h1').each(function () {
        $(this).prop('Counter', 0).animate({
            Counter: $(this).text()
        }, {
            duration: 2000,
            easing: 'swing',
            step: function (now) {
                $(this).text(Math.ceil(now));
            }
        });
    });
</script>