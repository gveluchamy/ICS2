@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager
@using ICSLockers.Models;
@model IdentityRole

@{

    ViewData["Title"] = "Location";
    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}
<div class="container-fluid main p-0">
    <div class="title-bar">
        <h5>Create User</h5>
    </div>
    <div class="content-wrapper create-user">
        <div class="passcode d-flex align-items-center text-center">
            <div class="main-heading">
                <h5>Create Account</h5>
            </div>
            <form class="needs-validation" novalidate id="myForm" onsubmit="return false">
                <div class="login-card create-user-form create-user">
                    <div class="d-flex align-items-center justify-content-between first-name-div">
                        <h5 class="col-lg-4 m-0 text-left">First Name</h5>
                        <div class="col-lg-8 p-0">
                            <input type="text" id="firstName" class="form-control first-name" onkeydown="fnRemoveValidation(this)">
                            <span id="error"></span>
                        </div>
                    </div>
                    <div class="d-flex align-items-center justify-content-between last-name-div">
                        <h5 class="col-lg-4 m-0 text-left">Last Name</h5>
                        <div class="col-lg-8 p-0">
                            <input type="text" id="lastName" class="form-control last-name" onkeydown="fnRemoveValidation(this)" />
                            <span id="error"></span>
                        </div>
                    </div>
                    <div class="d-flex align-items-center justify-content-between ssn-div">
                        <h5 class="col-lg-4 m-0 text-left">SSN</h5>
                        <div class="col-lg-8 p-0">
                            <input type="number" id="ssn" class="form-control ssn" pattern="/^-?\d+\.?\d*$/" onKeyPress="if(this.value.length==9) return false;" onkeydown="fnRemoveValidation(this)">
                            <span id="error"></span>
                        </div>

                    </div>
                    <div class="d-flex align-items-center justify-content-between email-div">
                        <h5 class="col-lg-4 m-0 text-left">Email-id</h5>
                        <div class="col-lg-8 p-0">
                            <input type="text" id="emailId" class="form-control w-100 email-id" onblur="fnValidateEmail(this)" onkeydown="fnRemoveValidation(this)">
                            <span id="error"></span>
                        </div>
                    </div>
                    <div class="d-flex align-items-center justify-content-between mobile-div">
                        <h5 class="col-lg-4 m-0 text-left">Mobile No</h5>
                        <div class="col-lg-8 p-0">
                            <input type="text" id="mobileNo" class="form-control mobile-no" pattern="/^-?\d+\.?\d*$/" onKeyPress="if(this.value.length==10) return false;" onkeydown="fnRemoveValidation(this)">
                            <span id="error"></span>
                        </div>
                    </div>
                    <div class="d-flex align-items-center justify-content-between">
                        <h5 class="col-lg-4 m-0 text-left">Date of Birth</h5>
                        <input type="date" id="DateOnly" class="form-control " />
                        <span id="error"></span>
                    </div>
                    <div class="d-flex align-items-center justify-content-between Role-div">
                        <h5 class="col-lg-4 m-0 text-left">Select Role</h5>
                        @Html.DropDownListFor(model => model.Name,( SelectList)@ViewBag.ListRole, new { @class="form-control Role" })
                    </div>
                    <button type="submit" class="btn btn-danger submit" onclick="fnNewUserCreation()">continue</button>
                </div>
            </form>
        </div>
    </div>
</div> 